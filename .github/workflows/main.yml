# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches:
      - feature/*
  pull_request:
    branches:
      - feature/*

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    name: Unit Test
    runs-on: ubuntu-18.04
    timeout-minutes: 10
    strategy:
      matrix:
        java: [ 1.8 ]

    steps:
      - uses: actions/checkout@v2

      # https://github.com/actions/setup-java
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          java-version: ${{ matrix.java }}

      # https://github.com/actions/cache
      - name: Cache gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            ${{ runner.os }}-

      - run: exit 1

      - uses: /composite@v1
        if: always()
#      - name: Set up env
#        env:
#          BASE_URL: ${{ secrets.BASE_URL }}
#          SENDBIRD_ID: ${{ secrets.SENDBIRD_ID }}
#          AGORA_ID: ${{ secrets.AGORA_ID }}
#        run: |
#          echo "base.url=$BASE_URL" > local.properties
#          echo "sendbird.id=$SENDBIRD_ID" >> local.properties
#          echo "agora.id=$AGORA_ID" >> local.properties

      - name: Grant Permission to Execute
        run: chmod +x gradlew

      # https://github.com/actions/virtual-evironments/tree/master/images/linux
      # 29.0.1 build version 지원하지 않는다
      - name: Run
        run: ./gradlew test --stacktrace
