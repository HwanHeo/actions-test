# This is a basic workflow to help you get started with Actions

name: action test

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches:
      - feature/*
  pull_request:
    branches:
      - feature/*

env:
  ANDROID_COMPILE_SDK: "29"
  ANDROID_BUILD_TOOLS: "29.0.1"
  ANDROID_SDK_TOOLS:   "4333796"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    name: Unit test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      # https://github.com/actions/setup-java
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          java-version: 1.8
      # https://github.com/actions/cache
#      - name: Cache gradle
#        uses: actions/cache@v2
#        with:
#          path: ~/.gradlec
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      - name: Install sdk manger
#        run: |
#          wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
#          unzip -d android-sdk-linux android-sdk.zip
#          echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
#          echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
#          echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
#          export ANDROID_HOME=$PWD/android-sdk-linux
#          export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
#          chmod +x ./gradlew
#          temporarily disable checking for EPIPE error and use yes to accept all licenses
#          set +o pipefail
#          yes | android-sdk-linux/tools/bin/sdkmanager --licenses
#          set -o pipefail
#
#      - name: First log
#        run: |
#          echo ls -al
#          java -version

      - name: Run
        run: ./gradlew test --stacktrace
