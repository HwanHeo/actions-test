
name: Build & Upload

on:
  push:
    branches:
      - release
  pull_request:
    branches:
      - release

jobs:
  test:
    name: Unit Test
    runs-on: ubuntu-18.04
    timeout-minutes: 1
    strategy:
      matrix:
        java: [ 1.8 ]

    steps:
      - uses: actions/checkout@v2

      # https://github.com/actions/setup-java
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          java-version: ${{ matrix.java }}
      # https://github.com/actions/cache
      - name: Cache gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            ${{ runner.os }}-

      - name: Set up env
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          SENDBIRD_ID: ${{ secrets.SENDBIRD_ID }}
          AGORA_ID: ${{ secrets.AGORA_ID }}
        run: |
          echo "base.url=$BASE_URL" > local.properties
          echo "sendbird.id=$SENDBIRD_ID" >> local.properties
          echo "agora.id=$AGORA_ID" >> local.properties

      - name: Grant Permission to Execute
        run: chmod +x gradlew

      - name: Run
        run: ./gradlew test --stacktrace

  build:
    name: Build APK
    needs: test
    runs-on: ubuntu-18.04
    timeout-minutes: 10
    strategy:
      matrix:
        java: [ 1.8 ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Cache gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            ${{ runner.os }}-

      - name: Set up env
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          SENDBIRD_ID: ${{ secrets.SENDBIRD_ID }}
          AGORA_ID: ${{ secrets.AGORA_ID }}
          KEYSTORE: ${{ secrets.KESTORE }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          KEYSTORE_ALIAS_PASSWORD: ${{ secrets.KEYSTORE_ALIAS_PASSWORD }}
        run: |
          echo "base.url=$BASE_URL" > local.properties
          echo "sendbird.id=$SENDBIRD_ID" >> local.properties
          echo "agora.id=$AGORA_ID" >> local.properties
          echo $KEYSTORE | base64 --decode --ignore-garbage > keystore
          echo "file=../keystore" > keystore.properties
          echo "password=$KEYSTORE_PASSWORD" >> keystore.properties
          echo "alias=$KEYSTORE_ALIAS" >> keystore.properties
          echo "alias.password=$KEYSTORE_ALIAS_PASSWORD" >> keystore.properties

      - name: Grant Permission to Execute
        run: chmod +x gradlew

      - name: Run
        run: ./gradlew assembleRelease

      - name: Upload APK to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: app/build/outputs/apk/release/

      - name: Send APK to Slack
        run: |
          curl -i https://slack.com/api/files.upload \
          -H "Authorization: Bearer ${{ secrets.SLACK_ACCESS_TOKEN }}" \
          -F file=@app/build/outputs/apk/release/app-release.apk \
          -F "initial_comment=\`${GITHUB_REF#refs/heads/feature/}\` / \`${GITHUB_SHA}\`" \
          -F "filetype=apk" \
          -F "title=VMT" \
          -F channels=${{ secrets.SLACK_CHANNEL_ID }}
